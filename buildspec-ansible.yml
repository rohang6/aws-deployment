version: 0.2

env: 
  variables:
    INVENTORY_FILE: "inventory.ini"

phases:
  install:
    commands:
      - yum install -y ansible
  
  pre_build:
    commands:
      - echo "Extracting Terraform Outputs"
      - export ECR_REPO_URL=$(jq -r '.ecr_repo_url.value' terraform_outputs.json)
      - echo "ECR_REPO_URL=$ECR_REPO_URL"
      - export DB_SECRET_ARN=$(jq -r '.db_secret_arn.value' terraform_outputs.json)
      - echo "DB_SECRET_ARN=$DB_SECRET_ARN"
      - export sshKey=$(jq -r '.sshKey.value' terraform_outputs.json)
      - echo "$sshKey" > OtestKey.pem
      - chmod 600 OtestKey.pem
      - echo "Ansible Inventory"
      - ssh-keygen -t rsa -b 2048 -f "id_rsa" -N ""
      - INSTANCE_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=myapp" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
      - echo "[myapp]" > $INVENTORY_FILE
      - echo "$INSTANCE_IP ansible_user=ubuntu" >> $INVENTORY_FILE
      - cat ~/.ssh/id_rsa.pub | ssh -i OtestKey.pem ubuntu@$INSTANCE_IP 'mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys'

  build:
    commands:
      - echo "Running Playbook"
      - ansible-playbook -i $INVENTORY_FILE playbook.yml --extra-vars "ecr_repo_url=$ECR_REPO_URL DB_SECRET_ARN=$DB_SECRET_ARN"